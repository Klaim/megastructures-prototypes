name: Build & Run Tests On Various Configurations
on: [push]

jobs:

  build_run_tests:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        toolchain: [clang, msvc, gcc]
        exclude:
          - os: ubuntu-latest
            toolchain: msvc
          - os: macos-latest
            toolchain: msvc
          - os: windows-latest
            toolchain: gcc

    name: Build & Run Tests
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: build2/setup-build2-github-action@v2
        with:
          build2-version: staged
      - name: Caching build2
        uses: actions/cache@v2
        with:
          path: ${{ BUILD2_BUILD_DIR }}
          key: ${{ runner.os }}-${{ hashFiles($BUILD2_BUILD_DIR/**) }}
          restore-keys: ${{ runner.os }}
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        shell: bash
        run: ls -la "${{ github.workspace }}"
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: "Install dependencies (Ubuntu only)"
        if: runner.os == 'Linux'
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y libx11-dev libxrandr-dev libudev-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev xorg-dev libvulkan-dev
      - name: Create all build configurations
        shell: bash
        run: ./init-configs.sh ${{ matrix.toolchain }}
      - name: Build All
        shell: bash
        run: bdep update -a
      - name: Run Tests
        shell: bash
        run: bdep test -a
      - name: Make sure it works with `b`
        shell: bash
        run: bdep clean -a && b "{update test}"
      - name: Install debug
        shell: bash
        run: "b install: build-${{ matrix.toolchain }}-debug"
      - name: Install release
        shell: bash
        run: "b install: build-${{ matrix.toolchain }}-release"


